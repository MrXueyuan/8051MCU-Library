C51 COMPILER V9.59.0.0   C51_6050_UART                                                     07/08/2018 16:21:07 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE C51_6050_UART
OBJECT MODULE PLACED IN .\Objects\C51-6050-UART.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE C51-6050-UART.C OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\L
                    -istings\C51-6050-UART.lst) TABS(2) OBJECT(.\Objects\C51-6050-UART.obj)

line level    source

   1          #include <REG52.H>
   2          #include <math.h>
   3          #include <stdio.h>
   4          #include <INTRINS.H>
   5          
   6          typedef unsigned char  uchar;
   7          typedef unsigned short ushort;
   8          typedef unsigned int   uint;
   9          
  10          sbit    SCL=P1^0;
  11          sbit    SDA=P1^2;
  12          //****************************************
  13          // 定义MPU6050内部地址
  14          //****************************************
  15          #define SMPLRT_DIV    0x19  //陀螺仪采样率，典型值：0x07(125Hz)
  16          #define CONFIG      0x1A  //低通滤波频率，典型值：0x06(5Hz)
  17          #define GYRO_CONFIG   0x1B  //陀螺仪自检及测量范围，典型值：0x18(不自检，2000deg/s)
  18          #define ACCEL_CONFIG  0x1C  //加速计自检、测量范围及高通滤波频率，典型值：0x01(不自检，2G，5Hz)
  19          #define ACCEL_XOUT_H  0x3B
  20          #define ACCEL_XOUT_L  0x3C
  21          #define ACCEL_YOUT_H  0x3D
  22          #define ACCEL_YOUT_L  0x3E
  23          #define ACCEL_ZOUT_H  0x3F
  24          #define ACCEL_ZOUT_L  0x40
  25          #define TEMP_OUT_H    0x41
  26          #define TEMP_OUT_L    0x42
  27          #define GYRO_XOUT_H   0x43
  28          #define GYRO_XOUT_L   0x44  
  29          #define GYRO_YOUT_H   0x45
  30          #define GYRO_YOUT_L   0x46
  31          #define GYRO_ZOUT_H   0x47
  32          #define GYRO_ZOUT_L   0x48
  33          #define PWR_MGMT_1    0x6B  //电源管理，典型值：0x00(正常启用)
  34          #define WHO_AM_I    0x75  //IIC地址寄存器(默认数值0x68，只读)
  35          #define SlaveAddress  0xD0  //IIC写入时的地址字节数据，+1为读取
  36          //**************************************************************************************************
  37          //定义类型及变量
  38          //**************************************************************************************************
  39          uchar dis[6];         //显示数字(-511至512)的字符数组
  40          int dis_data;         //变量
  41          //**************************************************************************************************
  42          //函数声明
  43          //**************************************************************************************************
  44          void  Delay5us();
  45          void  delay(unsigned int k);                    //延时            
  46          void  lcd_printf(uchar *s,int temp_data);
  47          //********************************MPU6050操作函数***************************************************
  48          void  InitMPU6050();                      //初始化MPU6050
  49          void  I2C_Start();
  50          void  I2C_Stop();
  51          void  I2C_SendACK(bit ack);
  52          bit   I2C_RecvACK();
  53          void  I2C_SendByte(uchar dat);
  54          uchar I2C_RecvByte();
C51 COMPILER V9.59.0.0   C51_6050_UART                                                     07/08/2018 16:21:07 PAGE 2   

  55          void  I2C_ReadPage();
  56          void  I2C_WritePage();
  57          
  58          void  display_ACCEL_x();
  59          void  display_ACCEL_y();
  60          void  display_ACCEL_z();
  61          uchar Single_ReadI2C(uchar REG_Address);            //读取I2C数据
  62          void  Single_WriteI2C(uchar REG_Address,uchar REG_data);      //向I2C写入数据
  63          //********************************************************************************
  64          //整数转字符串
  65          //********************************************************************************
  66          void lcd_printf(uchar *s,int temp_data)
  67          {
  68   1        if(temp_data<0)
  69   1        {
  70   2          temp_data=-temp_data;
  71   2          *s='-';
  72   2        }
  73   1        else *s=' ';
  74   1      
  75   1        *++s =temp_data/10000+0x30;
  76   1        temp_data=temp_data%10000;     //取余运算
  77   1      
  78   1        *++s =temp_data/1000+0x30;
  79   1        temp_data=temp_data%1000;     //取余运算
  80   1      
  81   1        *++s =temp_data/100+0x30;
  82   1        temp_data=temp_data%100;     //取余运算
  83   1        *++s =temp_data/10+0x30;
  84   1        temp_data=temp_data%10;      //取余运算
  85   1        *++s =temp_data+0x30;   
  86   1      }
  87          //******************************************************************************************************
  88          //串口初始化
  89          //*******************************************************************************************************
  90          void init_uart()
  91          {
  92   1        TMOD=0x21;        
  93   1        TH1=0xfd;   //实现波特率9600（系统时钟11.0592MHZ）    
  94   1        TL1=0xfd;   
  95   1          
  96   1        SCON=0x50;
  97   1        PS=1;      //串口中断设为高优先级别
  98   1        TR0=1;     //启动定时器     
  99   1        TR1=1;
 100   1        ET0=1;     //打开定时器0中断      
 101   1        ES=1; 
 102   1        EA=1;
 103   1      }
 104          //*************************************************************************************************
 105          //串口发送函数
 106          //*************************************************************************************************
 107          void  SeriPushSend(uchar send_data)
 108          {
 109   1          SBUF=send_data;  
 110   1        while(!TI);TI=0;    
 111   1      }
 112          //*************************************************************************************************
 113          //************************************延时*********************************************************
 114          //*************************************************************************************************
 115          void delay(unsigned int k)  
 116          {           
C51 COMPILER V9.59.0.0   C51_6050_UART                                                     07/08/2018 16:21:07 PAGE 3   

 117   1        unsigned int i,j;       
 118   1        for(i=0;i<k;i++)
 119   1        {     
 120   2          for(j=0;j<121;j++);
 121   2        }           
 122   1      }
 123          //************************************************************************************************
 124          //延时5微秒(STC90C52RC@12M)
 125          //不同的工作环境,需要调整此函数
 126          //注意当改用1T的MCU时,请调整此延时函数
 127          //************************************************************************************************
 128          void Delay5us()
 129          {
 130   1        _nop_();_nop_();_nop_();_nop_();
 131   1        _nop_();_nop_();_nop_();_nop_();
 132   1        _nop_();_nop_();_nop_();_nop_();
 133   1        _nop_();_nop_();_nop_();_nop_();
 134   1      }
 135          //*************************************************************************************************
 136          //I2C起始信号
 137          //*************************************************************************************************
 138          void I2C_Start()
 139          {
 140   1          SDA = 1;                    //拉高数据线
 141   1          SCL = 1;                    //拉高时钟线
 142   1          Delay5us();                 //延时
 143   1          SDA = 0;                    //产生下降沿
 144   1          Delay5us();                 //延时
 145   1          SCL = 0;                    //拉低时钟线
 146   1      }
 147          //*************************************************************************************************
 148          //I2C停止信号
 149          //*************************************************************************************************
 150          void I2C_Stop()
 151          {
 152   1          SDA = 0;                    //拉低数据线
 153   1          SCL = 1;                    //拉高时钟线
 154   1          Delay5us();                 //延时
 155   1          SDA = 1;                    //产生上升沿
 156   1          Delay5us();                 //延时
 157   1      }
 158          //**************************************************************************************************
 159          //I2C发送应答信号
 160          //入口参数:ack (0:ACK 1:NAK)
 161          //**************************************************************************************************
 162          void I2C_SendACK(bit ack)
 163          {
 164   1          SDA = ack;                  //写应答信号
 165   1          SCL = 1;                    //拉高时钟线
 166   1          Delay5us();                 //延时
 167   1          SCL = 0;                    //拉低时钟线
 168   1          Delay5us();                 //延时
 169   1      }
 170          //****************************************************************************************************
 171          //I2C接收应答信号
 172          //****************************************************************************************************
 173          bit I2C_RecvACK()
 174          {
 175   1          SCL = 1;                    //拉高时钟线
 176   1          Delay5us();                 //延时
 177   1          CY = SDA;                   //读应答信号
 178   1          SCL = 0;                    //拉低时钟线
C51 COMPILER V9.59.0.0   C51_6050_UART                                                     07/08/2018 16:21:07 PAGE 4   

 179   1          Delay5us();                 //延时
 180   1          return CY;
 181   1      }
 182          //*****************************************************************************************************
 183          //向I2C总线发送一个字节数据
 184          //*****************************************************************************************************
 185          void I2C_SendByte(uchar dat)
 186          {
 187   1          uchar i;
 188   1          for (i=0; i<8; i++)         //8位计数器
 189   1          {
 190   2              dat <<= 1;              //移出数据的最高位
 191   2              SDA = CY;               //送数据口
 192   2              SCL = 1;                //拉高时钟线
 193   2              Delay5us();             //延时
 194   2              SCL = 0;                //拉低时钟线
 195   2              Delay5us();             //延时
 196   2          }
 197   1          I2C_RecvACK();
 198   1      }
 199          //*****************************************************************************************************
 200          //从I2C总线接收一个字节数据
 201          //******************************************************************************************************
 202          uchar I2C_RecvByte()
 203          {
 204   1          uchar i;
 205   1          uchar dat = 0;
 206   1          SDA = 1;                    //使能内部上拉,准备读取数据,
 207   1          for (i=0; i<8; i++)         //8位计数器
 208   1          {
 209   2              dat <<= 1;
 210   2              SCL = 1;                //拉高时钟线
 211   2              Delay5us();             //延时
 212   2              dat |= SDA;             //读数据               
 213   2              SCL = 0;                //拉低时钟线
 214   2              Delay5us();             //延时
 215   2          }
 216   1          return dat;
 217   1      }
 218          //*****************************************************************************************************
 219          //向I2C设备写入一个字节数据
 220          //*****************************************************************************************************
 221          void Single_WriteI2C(uchar REG_Address,uchar REG_data)
 222          {
 223   1          I2C_Start();                  //起始信号
 224   1          I2C_SendByte(SlaveAddress);   //发送设备地址+写信号
 225   1          I2C_SendByte(REG_Address);    //内部寄存器地址，
 226   1          I2C_SendByte(REG_data);       //内部寄存器数据，
 227   1          I2C_Stop();                   //发送停止信号
 228   1      }
 229          //*******************************************************************************************************
 230          //从I2C设备读取一个字节数据
 231          //*******************************************************************************************************
 232          uchar Single_ReadI2C(uchar REG_Address)
 233          {
 234   1        uchar REG_data;
 235   1        I2C_Start();                   //起始信号
 236   1        I2C_SendByte(SlaveAddress);    //发送设备地址+写信号
 237   1        I2C_SendByte(REG_Address);     //发送存储单元地址，从0开始  
 238   1        I2C_Start();                   //起始信号
 239   1        I2C_SendByte(SlaveAddress+1);  //发送设备地址+读信号
 240   1        REG_data=I2C_RecvByte();       //读出寄存器数据
C51 COMPILER V9.59.0.0   C51_6050_UART                                                     07/08/2018 16:21:07 PAGE 5   

 241   1        I2C_SendACK(1);                //接收应答信号
 242   1        I2C_Stop();                    //停止信号
 243   1        return REG_data;
 244   1      }
 245          //******************************************************************************************************
 246          //初始化MPU6050
 247          //******************************************************************************************************
 248          void InitMPU6050()
 249          {
 250   1        Single_WriteI2C(PWR_MGMT_1, 0x00);  //解除休眠状态
 251   1        Single_WriteI2C(SMPLRT_DIV, 0x07);
 252   1        Single_WriteI2C(CONFIG, 0x06);
 253   1        Single_WriteI2C(GYRO_CONFIG, 0x18);
 254   1        Single_WriteI2C(ACCEL_CONFIG, 0x01);
 255   1      }
 256          //******************************************************************************************************
 257          //合成数据
 258          //******************************************************************************************************
 259          int GetData(uchar REG_Address)
 260          {
 261   1        uchar H,L;
 262   1        H=Single_ReadI2C(REG_Address);
 263   1        L=Single_ReadI2C(REG_Address+1);
 264   1        return ((H<<8)+L);   //合成数据
 265   1      }
 266          //******************************************************************************************************
 267          //超级终端（串口调试助手）上显示10位数据
 268          //******************************************************************************************************
 269          void Display10BitData(int value)
 270          {  uchar i;
 271   1        value/=64;              //转换为10位数据
 272   1        lcd_printf(dis, value);     //转换数据显示
 273   1        for(i=0;i<6;i++)
 274   1        {
 275   2          SeriPushSend(dis[i]);
 276   2          }
 277   1      
 278   1        //  DisplayListChar(x,y,dis,4); //启始列，行，显示数组，显示长度
 279   1      }
 280          //*******************************************************************************************************
 281          //主程序
 282          //*******************************************************************************************************
 283          void main()
 284          { 
 285   1        delay(500);   //上电延时    
 286   1        init_uart();
 287   1        InitMPU6050();  //初始化MPU6050
 288   1        delay(150);
 289   1        while(1)
 290   1        {
 291   2        
 292   2          Display10BitData(GetData(ACCEL_XOUT_H));  //显示X轴加速度
 293   2          Display10BitData(GetData(ACCEL_YOUT_H));  //显示Y轴加速度
 294   2          Display10BitData(GetData(ACCEL_ZOUT_H));  //显示Z轴加速度
 295   2          Display10BitData(GetData(GYRO_XOUT_H));   //显示X轴角速度
 296   2          Display10BitData(GetData(GYRO_YOUT_H));   //显示Y轴角速度
 297   2          Display10BitData(GetData(GYRO_ZOUT_H));   //显示Z轴角速度
 298   2           
 299   2          SeriPushSend(0x0d); 
 300   2              SeriPushSend(0x0a);//换行，回车
 301   2          delay(2000);
 302   2        }
C51 COMPILER V9.59.0.0   C51_6050_UART                                                     07/08/2018 16:21:07 PAGE 6   

 303   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    712    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
